{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/UI/Card.js","Components/Expenses/ExpensesList.js","Components/Expenses/ExpensesFilter.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpenses/ExpenseForm.js","Components/NewExpenses/NewExpenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","ExpenseItem","title","amount","Card","classes","children","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","console","log","onSaveExpenseData","type","required","min","step","onClick","onCancel","NewExpenses","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.699a5393.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\nconst ExpenseDate=(props)=>{\r\n\r\n    const month=props.date.toLocaleString('en-US',{month:'long'});\r\n    const day=props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year =props.date.getFullYear();\r\n\r\n    return(\r\n\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem=(props)=>{\r\n   \r\n    return(\r\n        <li>\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n         \r\n            <div className=\"expense-item_description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item_price\">${props.amount}</div>\r\n            </div>\r\n         \r\n        </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './Card.css';\r\nimport '../Expenses/ExpenseItem';\r\nconst Card=(props)=>{\r\n    const classes='card ' + props.className;\r\n\r\n    return(\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar=(props)=>{\r\n    let barFillHeight='0%';\r\n\r\n\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)+ '%';\r\n    }\r\n    return(\r\n        <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label} </div>\r\n\r\n    </div>\r\n    );\r\n   \r\n\r\n    \r\n\r\n\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart=(props)=>{\r\n   const dataPointValues=props.dataPoints.map(dataPoint=>dataPoint.value);\r\n   const totalMaximum=Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint)=>(\r\n                \r\n                <ChartBar\r\n                key={dataPoint.label}\r\n                value={dataPoint.value}\r\n                maxValue={totalMaximum}\r\n                label={dataPoint.label}\r\n                />\r\n            )\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n    \r\n};\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart=(props)=>{\r\nconst chartDataPoints=[\r\n    {label:\"Jan\",value:0},\r\n    {label:\"Feb\",value:0},\r\n    {label:\"Mar\",value:0},\r\n    {label:\"Apr\",value:0},\r\n    {label:\"May\",value:0},\r\n    {label:\"Jun\",value:0},\r\n    {label:\"Jul\",value:0},    \r\n    {label:\"Aug\",value:0},\r\n    {label:\"Sep\",value:0},\r\n    {label:\"Oct\",value:0},\r\n    {label:\"Nov\",value:0},\r\n    {label:\"Dec\",value:0},\r\n];\r\n\r\nfor(const expense of props.expenses){\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n}\r\n\r\nreturn <Chart dataPoints={chartDataPoints}/>\r\n}\r\nexport default ExpensesChart;","import React,{ useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\nconst Expenses=(props)=>{\r\n  const [filteredYear, setFilteredYear] = useState('2019');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n \r\n\r\n\r\n    return(\r\n        <Card className=\"expenses\">\r\n          <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n\r\n            {/* shorthand notation for conditional rendering */}\r\n          {/* {filteredExpenses.length===0 && <p>No result found</p> }\r\n\r\n          {filteredExpenses.length>0 &&\r\n            filteredExpenses.map(expense=>{\r\n          return <ExpenseItem\r\n           key={expense.id}\r\n           title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}/>\r\n          });\r\n          } */}\r\n\r\n          {/* {expensesContent} */}\r\n          <ExpensesChart expenses={filteredExpenses}/>\r\n          <ExpensesList items={filteredExpenses}/>\r\n          \r\n        \r\n      </Card>\r\n    );\r\n\r\n\r\n}\r\nexport default Expenses;","import React,{ useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm=(props)=>{\r\n    const [enteredTitle,setEnteredTitle]=useState(' ');\r\n    const [enteredAmount,setEnteredAmount]=useState(' ');\r\n    const [enteredDate,setEnteredDate]=useState(' ');\r\n\r\n\r\n    // ALTERNATIVE APPROACH IN ONE useState()\r\n    // ALTERNATIVE APPROACH IN ONE useState()\r\n    // const[userInput,setUserInput]=useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:''\r\n    // });\r\n\r\n\r\n    // for Title\r\n    const titleChangeHandler=(event)=>{\r\n        // thisfunction is used when multiple useState() is  used\r\n        setEnteredTitle(event.target.value);\r\n        // 2nd ways\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle:event.target.value\r\n        // });\r\n        // 3rd ways\r\n        // setUserInput((prevState)=>{\r\n        //     return{...prevState,enteredTitle:event.target.value}\r\n        // })\r\n      \r\n     }\r\n\r\n    //  for amount\r\n    const amountChangeHandler=(event)=>{\r\n        setEnteredAmount(event.target.value);\r\n        // 2nd ways \r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:event.target.value\r\n        // });\r\n        // 3rd ways\r\n        // setUserInput((prevState)=>{\r\n        //     return{...prevState,enteredAmount:event.target.value}\r\n        // })\r\n\r\n\r\n       \r\n\r\n       \r\n\r\n\r\n    }\r\n\r\n    // for date\r\n    const dateChangeHandler=(event)=>{\r\n        setEnteredDate(event.target.value);\r\n\r\n        // 2nd ways\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate:event.target.value\r\n\r\n        // })\r\n        // 3rd ways\r\n        // setUserInput((prevState)=>{\r\n        //     return{...prevState,enteredDate:event.target.value}\r\n        // })\r\n\r\n\r\n    }\r\n\r\n    \r\n         // storing the value of form\r\n         const submitHandler=(event)=>{\r\n            event.preventDefault();\r\n\r\n            const expenseData={\r\n                title:enteredTitle,\r\n                amount:enteredAmount,\r\n                date:new Date(enteredDate)\r\n            };\r\n            console.log(expenseData);\r\n            \r\n\r\n            // transferring data from child to parent component \r\n            props.onSaveExpenseData(expenseData);\r\n            setEnteredTitle('');\r\n            setEnteredDate('');\r\n            setEnteredAmount('');\r\n           \r\n        };\r\n    return(\r\n        // 012->handling form submission  \r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n\r\n                {/* for Title */}\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title:</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}\r\n                    required/>\r\n                </div>\r\n\r\n                {/* for Amount */}\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount:</label>\r\n                    <input type=\"number\"  value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} required/>\r\n                </div>\r\n\r\n                {/* For Date */}\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date:</label>\r\n                    <input type=\"date\" value={enteredDate}  min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} required/>\r\n                </div>\r\n            </div>\r\n\r\n            {/* submit button  */}\r\n            <div className=\"new-expense__actions\">\r\n            <button type=\"submit\" >Add Expense</button>\r\n            <button type=\"submit\" onClick={props.onCancel}> Cancel</button>\r\n            </div>\r\n           \r\n        </form>\r\n    );\r\n\r\n}\r\nexport default ExpenseForm;\r\n\r\n\r\n\r\n","import React,{ useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nimport './NewExpenses.css';\r\n\r\nconst NewExpenses=(props)=>{\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler=(enteredExpenseData)=>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString(),\r\n        }\r\n        console.log(expenseData);\r\n\r\n        // recieving data from child component[ExpenseForm.js] to parent component here[NewExpense.js] & here [NewExpense.js] is act as child component and transferring data to parent component[App.js] by passing argument\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n\r\n\r\n    }\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n      };\r\n    \r\n      const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n      };\r\n     return(\r\n         <div className=\"new-expense\">\r\n\r\n              {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n\r\n             \r\n\r\n         </div>\r\n     );\r\n\r\n}\r\nexport default NewExpenses;","import Expenses from './Components/Expenses/Expenses';\nimport './App.css';\n\nimport NewExpenses from './Components/NewExpenses/NewExpenses';\nimport { useState } from 'react';\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n\n  { id: 'e2', \n  title: 'New TV',\n   amount: 799.49, \n   date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },];\n\n\n  // main App component\nconst App=()=>{\n  const [expenses,setExpenses]=useState(DUMMY_EXPENSES);\n \n\n    const addExpenseHandler=(expense)=>{\n      console.log('[App.js]');\n      console.log(expense);\n\n      setExpenses((prevState)=>{\n        // item insert in last\n        return [...prevState,expense];\n\n        // item insert in first\n        // return [...prevState,expense];\n      });\n    }\n\n  return (\n    <div >\n     <NewExpenses onAddExpense={addExpenseHandler}/>\n     <Expenses items={expenses}/>\n\n    </div>\n     \n     \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}